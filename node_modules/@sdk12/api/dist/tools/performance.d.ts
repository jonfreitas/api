type Entry = {
    name: string;
    time: number;
};
type Measurement = {
    duration: string;
    source: string;
};
declare class TimeTrace {
    enabled: boolean;
    timesList: Record<string, Entry>;
    measurements: Record<string, Measurement>;
    constructor(timeTracing: any);
    mark(name: string): void;
    measure: (name: string, start: string, end?: string) => void;
    private debugLine;
    private measuresToJSON;
    logMeasure: () => string;
    /**
     *
     * @param start Time when the event started
     * @param end   Time when the event ended
     *
     * @returns The difference in ms
     */
    private diffMarks;
}
export default class TimeTraceSingleton {
    private static instance;
    constructor();
    getInstance(): TimeTrace;
}
export {};
