const rules = {
  /**
   * Replaces no-shadow with the typescript version
   * @see https://github.com/typescript-eslint/typescript-eslint/issues/2483
   */
  noShadow: {
    /**
     * @see https://eslint.org/docs/rules/no-shadow
     */
    'no-shadow': 'off',

    /**
     * @see https://typescript-eslint.io/rules/no-shadow
     */
    '@typescript-eslint/no-shadow': 'error',
  },

  /**
   * We need to type everything (remove `any`s from code) before changing the `warn` to `error`
   *
   * @see https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended-requiring-type-checking.ts
   */
  requiringTypeCheckingOverrides: {
    /**
     * @see https://typescript-eslint.io/rules/no-unsafe-argument
     */
    '@typescript-eslint/no-unsafe-argument': ['warn'],

    /**
     * @see https://typescript-eslint.io/rules/no-unsafe-assignment
     */
    '@typescript-eslint/no-unsafe-assignment': ['warn'],

    /**
     * @see https://typescript-eslint.io/rules/no-unsafe-call
     */
    '@typescript-eslint/no-unsafe-call': ['warn'],

    /**
     * @see https://typescript-eslint.io/rules/no-unsafe-member-access
     */
    '@typescript-eslint/no-unsafe-member-access': ['warn'],

    /**
     * @see https://typescript-eslint.io/rules/no-unsafe-return
     */
    '@typescript-eslint/no-unsafe-return': ['warn'],

    /**
     * @see https://typescript-eslint.io/rules/unbound-method
     */
    '@typescript-eslint/unbound-method': ['warn'],
  },
}

module.exports = {
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      node: {
        extensions: ['.js', '.ts'],
      },
      typescript: {
        project: '.',
      },
    },
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.json',
    tsconfigRootDir: './',
  },
  plugins: [
    '@typescript-eslint',
    'import',
    'simple-import-sort',
    'sonarjs',
    'prettier',
  ],
  extends: [
    'airbnb-typescript/base',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'prettier',
  ],
  rules: {
    /**
     * @see https://typescript-eslint.io/rules/member-delimiter-style
     */
    '@typescript-eslint/member-delimiter-style': [
      'error',
      {
        multiline: {
          delimiter: 'none',
          requireLast: true,
        },
        singleline: {
          delimiter: 'comma',
          requireLast: false,
        },
      },
    ],

    ...rules.requiringTypeCheckingOverrides,
    ...rules.noShadow,

    /**
     * @see https://typescript-eslint.io/rules/no-explicit-any
     */
    '@typescript-eslint/no-explicit-any': 'warn',

    /**
     * @see https://typescript-eslint.io/rules/no-unused-vars
     */
    '@typescript-eslint/no-unused-vars': 'error',

    /**
     * @see https://typescript-eslint.io/rules/semi
     */
    '@typescript-eslint/semi': 'off',

    /**
     * @see https://eslint.org/docs/rules/class-methods-use-this
     */
    'class-methods-use-this': 'off',

    /**
     * @see https://eslint.org/docs/rules/no-underscore-dangle
     */
    'no-underscore-dangle': ['error', { allowAfterThis: true }],

    /**
     * @see https://eslint.org/docs/rules/func-style
     */
    'func-style': [
      'error',
      'declaration',
      {
        allowArrowFunctions: true,
      },
    ],

    /**
     * @see https://eslint.org/docs/rules/function-paren-newline
     */
    'function-paren-newline': 'off',

    /**
     * @see https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/extensions.md
     */
    'import/extensions': [
      'error',
      'always',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],

    /**
     * @see https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/no-unresolved.md
     */
    'import/no-unresolved': 'warn',

    /**
     * @see https://github.com/import-js/eslint-plugin-import/blob/main/docs/rules/prefer-default-export.md
     */
    'import/prefer-default-export': 'off',

    /**
     * @see https://eslint.org/docs/rules/max-len
     */
    'max-len': [
      'warn',
      {
        tabWidth: 2,
        ignoreUrls: true,
      },
    ],

    /**
     * @see https://eslint.org/docs/rules/no-mixed-operators
     */
    'no-mixed-operators': [
      'error',
      {
        allowSamePrecedence: true,
      },
    ],

    /**
     * @see https://eslint.org/docs/rules/no-new
     */
    'no-new': 'error',

    /**
     * @see https://eslint.org/docs/rules/object-curly-newline
     */
    'object-curly-newline': 'off',

    /**
     * @see https://eslint.org/docs/rules/quotes
     */
    quotes: ['error', 'single', { avoidEscape: true }],

    /**
     * @see https://eslint.org/docs/rules/semi
     */
    semi: ['error', 'never'],

    /**
     * @see https://github.com/SonarSource/eslint-plugin-sonarjs/blob/master/docs/rules/no-identical-functions.md
     */
    'sonarjs/no-identical-functions': 'warn',

    /**
     * @see https://github.com/prettier/eslint-plugin-prettier
     */
    'prettier/prettier': 'error',
  },
}
